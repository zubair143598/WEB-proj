{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\Project Implimentation\\\\project updated\\\\oas_updated\\\\frontend\\\\src\\\\screens\\\\SingleNote\\\\CreateNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport \"./images.css\";\n\nfunction CreateNote({\n  history\n}) {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [status, setStatus] = useState('');\n  const [pic, setPic] = useState();\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    loading,\n    error,\n    note\n  } = noteCreate;\n  console.log(note);\n\n  const postDetails = pics => {\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(pic);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setPic(\"\");\n    setStatus(\"\");\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category, status, pic));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Create a Project\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Create a new Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-edit\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"imageUpload\",\n                  onChange: e => postDetails(e.target.files[0]),\n                  accept: \".png, .jpg, .jpeg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"imageUpload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"imagePreview\",\n                  style: {\n                    backgroundImage: `url(${pic})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              value: title,\n              placeholder: \"Enter the Name\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: content,\n              placeholder: \"Enter the Details\",\n              rows: 4,\n              onChange: e => setContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              value: category,\n              placeholder: \"Enter the Type\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"status\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"status\",\n              value: status,\n              placeholder: \"Enter the Status\",\n              onChange: e => setStatus(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            onClick: resetHandler,\n            variant: \"danger\",\n            children: \"Reset Feilds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Creating on - \", new Date().toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateNote, \"nmzI3z9S5e3GhupdOOXIuoF9VYM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/Project Implimentation/project updated/oas_updated/frontend/src/screens/SingleNote/CreateNote.js"],"names":["React","useEffect","useState","MainScreen","Button","Card","Form","useDispatch","useSelector","createNoteAction","Loading","ErrorMessage","CreateNote","history","title","setTitle","content","setContent","category","setCategory","status","setStatus","pic","setPic","picMessage","setPicMessage","dispatch","noteCreate","state","loading","error","note","console","log","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","resetHandler","submitHandler","e","preventDefault","push","target","files","backgroundImage","value","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport \"./images.css\";\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [status, setStatus] = useState('')\n  const [pic, setPic] = useState();\n  const [picMessage,setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n    setPic(\"\");\n    setStatus(\"\")\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category, status, pic));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Project\">\n      <Card>\n        <Card.Header>Create a new Project</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n\n            <Form.Group controlId=\"title\">\n              <div className=\"avatar-upload\">\n                <div className=\"avatar-edit\">\n                  <input\n                    type=\"file\"\n                    id=\"imageUpload\"\n                    onChange={(e) => postDetails(e.target.files[0])}\n                    accept=\".png, .jpg, .jpeg\"\n                  />\n                  <label htmlFor=\"imageUpload\"></label>\n                </div>\n                <div className=\"avatar-preview\">\n                  <div\n                    id=\"imagePreview\"\n                    style={{ backgroundImage: `url(${pic})` }}\n                  ></div>\n                </div>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId=\"title\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the Name\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Details</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the Details\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Type</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Type\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"status\">\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                type=\"status\"\n                value={status}\n                placeholder=\"Enter the Status\"\n                onChange={(e) => setStatus(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Project\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n"]},"metadata":{},"sourceType":"module"}