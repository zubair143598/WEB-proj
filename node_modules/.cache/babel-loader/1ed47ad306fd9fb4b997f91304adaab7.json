{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { clientLoginReducer, clientRegisterReducer, clientUpdateReducer } from \"./reducers/clientReducers\";\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  clientLogin: clientLoginReducer,\n  clientRegister: clientRegisterReducer,\n  clientUpdate: clientUpdateReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst clientInfoFromStorage = localStorage.getItem(\"clientInfo\") ? JSON.parse(localStorage.getItem(\"clientInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  clientLogin: {\n    clientInfo: clientInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/Desktop/project updated/oas_updated/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","userLoginReducer","userRegisterReducer","userUpdateReducer","clientLoginReducer","clientRegisterReducer","clientUpdateReducer","reducer","noteList","userLogin","userRegister","userUpdate","clientLogin","clientRegister","clientUpdate","noteCreate","noteDelete","noteUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","clientInfoFromStorage","initialState","userInfo","clientInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,iBAJF,QAKO,0BALP;AAMA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,yBAJP;AAKA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,mBAHF,QAIO,2BAJP;AAMA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC9Be,EAAAA,QAAQ,EAAET,eADoB;AAE9BU,EAAAA,SAAS,EAAER,gBAFmB;AAG9BS,EAAAA,YAAY,EAAER,mBAHgB;AAI9BS,EAAAA,UAAU,EAAER,iBAJkB;AAK9BS,EAAAA,WAAW,EAAER,kBALiB;AAM9BS,EAAAA,cAAc,EAAER,qBANc;AAO9BS,EAAAA,YAAY,EAAER,mBAPgB;AAQ9BS,EAAAA,UAAU,EAAElB,iBARkB;AAS9BmB,EAAAA,UAAU,EAAElB,iBATkB;AAU9BmB,EAAAA,UAAU,EAAEjB;AAVkB,CAAD,CAA/B;AAaA,MAAMkB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAGA,MAAMG,qBAAqB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,YAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAD0B,GAE1B,IAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBf,EAAAA,SAAS,EAAE;AAAEgB,IAAAA,QAAQ,EAAEP;AAAZ,GADQ;AAEnBN,EAAAA,WAAW,EAAE;AAAEc,IAAAA,UAAU,EAAEH;AAAd;AAFM,CAArB;AAKA,MAAMI,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CACvBe,OADuB,EAEvBiB,YAFuB,EAGvB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  clientLoginReducer,\n  clientRegisterReducer,\n  clientUpdateReducer,\n} from \"./reducers/clientReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  clientLogin: clientLoginReducer,\n  clientRegister: clientRegisterReducer,\n  clientUpdate: clientUpdateReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\nconst clientInfoFromStorage = localStorage.getItem(\"clientInfo\")\n  ? JSON.parse(localStorage.getItem(\"clientInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n  clientLogin: { clientInfo: clientInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}